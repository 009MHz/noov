name: Test Caller & Reporter

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      run_ui:
        description: 'Run UI suite'
        type: boolean
        default: true
      run_api:
        description: 'Run API suite'
        type: boolean
        default: true
      base_url:
        description: 'Base URL for UI suite'
        type: string
        default: 'https://noovoleum.com'
      browsers:
        description: 'UI browsers (comma-separated: chromium,firefox,webkit)'
        type: string
        default: 'chromium'

permissions:
  contents: write  # needed for gh-pages push

jobs:
  meta:
    runs-on: ubuntu-latest
    outputs:
      event: ${{ steps.out.outputs.event }}
    steps:
      - id: out
        run: echo "event=${{ github.event_name }}" >> "$GITHUB_OUTPUT"

  ui:
    needs: meta
    # On dispatch, respect inputs; on push/PR run by default.
    if: ${{ (github.event_name == 'workflow_dispatch' && inputs.run_ui) || (github.event_name != 'workflow_dispatch') }}
    uses: ./.github/workflows/ui-test.yml
    with:
      base_url: ${{ github.event_name == 'workflow_dispatch' && inputs.base_url || 'https://noovoleum.com' }}
      browsers:  ${{ github.event_name == 'workflow_dispatch' && inputs.browsers  || 'chromium' }}

  api:
    needs: meta
    if: ${{ (github.event_name == 'workflow_dispatch' && inputs.run_api) || (github.event_name != 'workflow_dispatch') }}
    uses: ./.github/workflows/api-test.yml

  report-builder:
    runs-on: ubuntu-latest
    needs: [ui, api]
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout gh-pages branch (for history)
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
        continue-on-error: true  # branch may not exist yet

      - name: Download UI (chromium)
        uses: actions/download-artifact@v4
        with:
          name: allure-ui-chromium
          path: ./allure-results/chromium
        continue-on-error: true

      - name: Download UI (firefox)
        uses: actions/download-artifact@v4
        with:
          name: allure-ui-firefox
          path: ./allure-results/firefox
        continue-on-error: true

      - name: Download UI (webkit)
        uses: actions/download-artifact@v4
        with:
          name: allure-ui-webkit
          path: ./allure-results/webkit
        continue-on-error: true

      # --- Download artifacts from API suite ---
      - name: Download API artifacts
        uses: actions/download-artifact@v4
        with:
          name: allure-api
          path: ./allure-results/api
        continue-on-error: true

      - name: Combine all test results
        run: |
          mkdir -p ./allure-results-merged

          if [ -d "./allure-results/chromium" ]; then
            echo "Copying Chromium results..."
            cp -r ./allure-results/chromium/* ./allure-results-merged/ 2>/dev/null || echo "No Chromium results to copy"
          fi

          if [ -d "./allure-results/firefox" ]; then
            echo "Copying Firefox results..."
            cp -r ./allure-results/firefox/* ./allure-results-merged/ 2>/dev/null || echo "No Firefox results to copy"
          fi

          if [ -d "./allure-results/webkit" ]; then
            echo "Copying WebKit results..."
            cp -r ./allure-results/webkit/* ./allure-results-merged/ 2>/dev/null || echo "No WebKit results to copy"
          fi

          if [ -d "./allure-results/api" ]; then
            echo "Copying API results..."
            cp -r ./allure-results/api/* ./allure-results-merged/ 2>/dev/null || echo "No API results to copy"
          fi

          echo "Merged results:"
          ls -la ./allure-results-merged/ || true

      - name: Check merged results
        id: check
        run: |
          shopt -s nullglob
          count=$(find ./allure-results-merged -type f 2>/dev/null | wc -l || echo 0)
          if [ "$count" -gt 0 ]; then
            echo "has_results=true" >> $GITHUB_OUTPUT
          else
            echo "has_results=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate Allure Report (build history)
        if: steps.check.outputs.has_results == 'true'
        uses: simple-elf/allure-report-action@v1.7
        with:
          gh_pages: gh-pages          # use the checked-out gh-pages dir for history
          allure_history: allure-history
          allure_results: allure-results-merged
          keep_reports: 20

      - name: Deploy to GitHub Pages
        if: steps.check.outputs.has_results == 'true'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
          allow_empty_commit: true

      - name: Add report URL to summary
        if: always()
        run: |
          echo "## ðŸ“Š Multi-Suite Test Report" >> $GITHUB_STEP_SUMMARY
          echo "- UI job status: **${{ needs.ui.result }}**"   >> $GITHUB_STEP_SUMMARY
          echo "- API job status: **${{ needs.api.result }}**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ”— **Allure Report**: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" >> $GITHUB_STEP_SUMMARY

      - name: Skip publish (no results)
        if: steps.check.outputs.has_results != 'true'
        run: echo "No Allure results found. Skipping publish."
