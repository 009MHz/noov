name: Multi-Browser Selenium Tests with Allure Report

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests weekly on Wednesday at 3 AM UTC
    - cron: '0 3 * * 3'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test-runner:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox, edge]
      fail-fast: false  # Continue running other browsers even if one fails

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create allure-results directory
      run: mkdir -p allure-results

    - name: Run tests on ${{ matrix.browser }} browser
      run: |
        pytest ./tests \
          --browsers=${{ matrix.browser }} \
          --alluredir=./allure-results \
          -n=auto \
          --headless \
          --tb=short \
          -v \
          --dist=loadfile
      continue-on-error: true

    - name: Upload Allure results for ${{ matrix.browser }}
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-results-${{ matrix.browser }}
        path: ./allure-results
        retention-days: 30

  report-builder:
    runs-on: ubuntu-latest
    needs: test-runner
    if: always()  # Run even if tests fail

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Checkout gh-pages branch
      uses: actions/checkout@v4
      with:
        ref: gh-pages
        path: gh-pages
      continue-on-error: true  # Branch might not exist yet

    - name: Download Chrome test results
      uses: actions/download-artifact@v4
      with:
        name: allure-results-chrome
        path: ./allure-results/chrome
      continue-on-error: true

    - name: Download Firefox test results
      uses: actions/download-artifact@v4
      with:
        name: allure-results-firefox
        path: ./allure-results/firefox
      continue-on-error: true

    - name: Download Edge test results
      uses: actions/download-artifact@v4
      with:
        name: allure-results-edge
        path: ./allure-results/edge
      continue-on-error: true

    - name: Combine all test results
      run: |
        mkdir -p ./allure-results-merged
        
        # Copy results from each browser if they exist
        if [ -d "./allure-results/chrome" ]; then
          echo "Copying Chrome results..."
          cp -r ./allure-results/chrome/* ./allure-results-merged/ 2>/dev/null || echo "No Chrome results to copy"
        fi
        
        if [ -d "./allure-results/firefox" ]; then
          echo "Copying Firefox results..."
          cp -r ./allure-results/firefox/* ./allure-results-merged/ 2>/dev/null || echo "No Firefox results to copy"
        fi
        
        if [ -d "./allure-results/edge" ]; then
          echo "Copying Edge results..."
          cp -r ./allure-results/edge/* ./allure-results-merged/ 2>/dev/null || echo "No Edge results to copy"
        fi
        
        # List merged results
        echo "Merged results:"
        ls -la ./allure-results-merged/

    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@v1.7
      with:
        gh_pages: gh-pages
        allure_history: allure-history
        allure_results: allure-results-merged
        keep_reports: 20  # Keep last 20 reports

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: allure-history
        allow_empty_commit: true

    - name: Add report URL to summary
      if: always()
      run: |
        echo "## ðŸ“Š Multi-Browser Test Report" >> $GITHUB_STEP_SUMMARY
        echo "### Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Chrome**: ${{ needs.test-runner.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Firefox**: ${{ needs.test-runner.result }}" >> $GITHUB_STEP_SUMMARY  
        echo "- **Edge**: ${{ needs.test-runner.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "ðŸ“Š **Allure Report**: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" >> $GITHUB_STEP_SUMMARY